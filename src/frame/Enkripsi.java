/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package frame;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
/**
 *
 * @author warkop
 */
public class Enkripsi extends javax.swing.JFrame {
    
    private String LETTERS="";
    private Random random = new Random();
    
    private int kunci;
    private String file;
    /**
     * Creates new form FrameEnkripsi
     */
    public Enkripsi() {
        initComponents();
        
        //pengisian daftar huruf ke LETTERS
        for (int i=32; i<=126; i++) {
            this.LETTERS += (char)i;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnTelusuri = new javax.swing.JButton();
        btnEnkrip = new javax.swing.JButton();
        btnDekrip = new javax.swing.JButton();
        btnKeluar = new javax.swing.JButton();
        btnSimpan = new javax.swing.JButton();
        txtEncPlain = new javax.swing.JTextField();
        txtEncCipher = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtDecCiph = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtDecPlain = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Masukkan plaintext : ");

        jLabel2.setText("Hasil : ");
        jLabel2.setToolTipText("");

        btnTelusuri.setText("Telusuri");
        btnTelusuri.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTelusuriActionPerformed(evt);
            }
        });

        btnEnkrip.setText("Enkrip");
        btnEnkrip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnkripActionPerformed(evt);
            }
        });

        btnDekrip.setText("Dekrip");
        btnDekrip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDekripActionPerformed(evt);
            }
        });

        btnKeluar.setText("Keluar");
        btnKeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKeluarActionPerformed(evt);
            }
        });

        btnSimpan.setText("Simpan");
        btnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanActionPerformed(evt);
            }
        });

        jLabel3.setText("Masukkan ciphertext : ");

        jLabel4.setText("Hasil : ");
        jLabel4.setToolTipText("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtDecCiph)
                            .addComponent(txtDecPlain, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2))
                                .addGap(12, 12, 12)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtEncCipher, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                                    .addComponent(txtEncPlain)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnEnkrip)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnDekrip)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnSimpan)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnKeluar)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 130, Short.MAX_VALUE)
                        .addComponent(btnTelusuri)
                        .addGap(41, 41, 41))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(btnTelusuri)
                    .addComponent(txtEncPlain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtEncCipher, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtDecCiph, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(txtDecPlain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 82, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEnkrip)
                    .addComponent(btnDekrip)
                    .addComponent(btnKeluar)
                    .addComponent(btnSimpan))
                .addGap(24, 24, 24))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private String bacaTeks(String nama_berkas)
    {
        
        String bacaBaris="";
        
        FileReader berkasMasukkan = null;
        
        try {
            berkasMasukkan = new FileReader(nama_berkas);
        } 
        catch (IOException e){
            System.exit(1);
        }
        
        BufferedReader streamMasukkan = new BufferedReader(berkasMasukkan);
        try {
            while (true) {
                String barisData = streamMasukkan.readLine();
                if (barisData == null) {
                    break;
                }
                
                bacaBaris = bacaBaris+barisData;
            }
            
        } 
        catch (IOException e){
            
            System.exit(1);
        }
        
        try {
            berkasMasukkan.close();
        }
        catch (IOException e) {
            
        }
        return bacaBaris;
    }
    private void btnTelusuriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTelusuriActionPerformed
       
        String Teks;
        JFileChooser file_chooser = new JFileChooser();
        file_chooser.addChoosableFileFilter(new FileNameExtensionFilter("text file", "txt"));
        file_chooser.showOpenDialog(null);
        
        this.file = file_chooser.getSelectedFile().getAbsolutePath();
        
        Teks = bacaTeks(this.file);
        
        txtEncPlain.setText(Teks);
    }//GEN-LAST:event_btnTelusuriActionPerformed
    
    //pencarian indeks
    private int cari(char temp)
    {      
        for (int i=0; i<this.LETTERS.length(); i++) {
           if (temp == this.LETTERS.charAt(i)) {
               return i;              
           }
        }  
        return -1;
    }
    
    //fungsi enkripsi
    private String enkrip()
    {
        String plaintext, ciphertext;        
        int angka;
        
        this.kunci = random.nextInt(this.LETTERS.length());
        plaintext = txtEncPlain.getText();
       
        ciphertext="";
                                
        for (int i=0; i < plaintext.length(); i++) {
            //mendapatkan indeks dari LETTERS
            angka = cari(plaintext.charAt(i));
            
            //membuat kunci enkripsi yang digunakan untuk menggeser huruf ke depan
            angka = angka + this.kunci;
            
            if (angka >= LETTERS.length()) {
                angka -= LETTERS.length();
            } else if (angka < 0) {
                angka += LETTERS.length();
            }                    
            
            ciphertext += this.LETTERS.charAt(angka);
            
        }
        //melampirkan kunci pada ciphertext
        ciphertext += this.LETTERS.charAt(this.kunci);
        
        return ciphertext;
    }
    
    
    
    
    //fungsi dekripsi
    private String dekrip()
    {
        String plaintext, ciphertext;
        int dec_kunci;
        int angka;
       
        ciphertext = txtDecCiph.getText();
             
        plaintext="";
        
        //kunci dekripsi didapat dari indeks terakhir ciphertext
        dec_kunci = cari(ciphertext.charAt(ciphertext.length()-1));
        
        for (int i=0; i < ciphertext.length()-1; i++) {
            //mendapatkan indeks dari LETTERS
            angka = cari(ciphertext.charAt(i));
            
            //membuat kunci dekripsi yang digunakan untuk menggeser huruf ke belakang
            angka = angka - dec_kunci;
            
            if (angka >= LETTERS.length()) {
                angka -= LETTERS.length();
            } else if (angka < 0) {
                angka += LETTERS.length();
            }                    
            
            plaintext += this.LETTERS.charAt(angka);           
        }
       
        return plaintext;
    }
    
    @SuppressWarnings("IncompatibleEquals")
    private void btnEnkripActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnkripActionPerformed
        txtEncCipher.setText(enkrip());     
    }//GEN-LAST:event_btnEnkripActionPerformed

    private void btnKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKeluarActionPerformed
        System.exit(0);
    }//GEN-LAST:event_btnKeluarActionPerformed

    private void btnDekripActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDekripActionPerformed
        txtDecPlain.setText(dekrip());      
    }//GEN-LAST:event_btnDekripActionPerformed
    
    private void tulisFile() throws IOException
    {
        String lembar = null;
        FileOutputStream out = new FileOutputStream(lembar, true);
        out.write(txtEncCipher.getText().getBytes());
        /*try (BufferedWriter tulis = new BufferedWriter(new FileWriter(this.file))) {
            tulis.write(txtEncCipher.getText());
            tulis.close();
        }*/
    }
    
    private void btnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanActionPerformed
        JFileChooser file_chooser =new JFileChooser();
        file_chooser.setFileFilter(new FileNameExtensionFilter("text", "txt"));
        int rVal = file_chooser.showSaveDialog(null);
        file_chooser.approveSelection();
        if (rVal == JFileChooser.APPROVE_OPTION) {
            try {
            tulisFile();
            } catch (IOException ex) {
                Logger.getLogger(Enkripsi.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
        
        
    }//GEN-LAST:event_btnSimpanActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Enkripsi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Enkripsi().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDekrip;
    private javax.swing.JButton btnEnkrip;
    private javax.swing.JButton btnKeluar;
    private javax.swing.JButton btnSimpan;
    private javax.swing.JButton btnTelusuri;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField txtDecCiph;
    private javax.swing.JTextField txtDecPlain;
    private javax.swing.JTextField txtEncCipher;
    private javax.swing.JTextField txtEncPlain;
    // End of variables declaration//GEN-END:variables
}
